# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo apt update
      sudo systemctl stop mysql
      sudo apt-get remove --purge mysql-server mysql-client mysql-common -y
      sudo apt-get autoremove -y
      sudo apt-get autoclean
      sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password test123'
      sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password test123'
      sudo apt-get -y install mysql-server
      sudo mysql
      GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'test123' WITH GRANT OPTION;
      exit;


- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    sonarQubeRunAnalysis: false
- task: Docker@2
  inputs:
    containerRegistry: 'docker-conn'
    repository: 'davulv/pages-service'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: persistant
- task: CopyFiles@2
  inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/*.yaml'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'MSDN Platforms Subscription(f4c6dc02-01e5-4253-a13b-67175f4fd724)'
    azureResourceGroup: 'my-resource-group'
    kubernetesCluster: 'k8Cluster'
    useClusterAdmin: true
    namespace: 'davulv'
    command: 'apply'
    arguments: |
      -f $(Build.ArtifactStagingDirectory)/deployment/pages-namespace.yaml -f $(Build.ArtifactStagingDirectory)/deployment/pages-service.yaml
            -f $(Build.ArtifactStagingDirectory)/deployment/pages-config.yaml
            -f $(Build.ArtifactStagingDirectory)/deployment/pages-deployment.yaml
